BaltLAmotorNEI[BaltLAmotorNEI$type=="point",]
BaltLAmotorNEI[BaltLAmotorNEI$type=="POINT",]
unique(BaltLAmotorNEI$SCC.Level.One)
BaltLAmotorNEI[c(1,608),]
NEIBaltLAmot <- NEIBaltLAmot[order(NEIBaltLAmot$year,NEIBaltLAmot$SCC),]
head(NEIBaltLAmot)
test <- BaltLAmotorNEI[order(BaltLAmotorNEI$year,BaltLAmotorNEI$Short.Name),]
head(test,10)
test <- BaltLAmotorNEI[order(BaltLAmotorNEI$fips,BaltLAmotorNEI$year,BaltLAmotorNEI$Short.Name),]
head(test,10)
table(test$fips,test$year,test$Short.Name)
table(test$fips,test$year,as.character(test$Short.Name))
table(as.character(test$Short.Name),test$year,test$fips)
test[grepl("Class 2B - Rural Major Collector",test$Short.Name),]
test[grepl("Class 2B - Rural Major Collector",test$Short.Name) & test$year="2002",]
test[grepl("Class 2B - Rural Major Collector",test$Short.Name) & test$year=="2002",]
BaltLAmotorNEI[1291:1305,]
BaltLAmotorNEI[1291:1305,fips=="06037"]
BaltLAmotorNEI[1291:1305,BaltLAmotorNEI$fips =="06037"]
BaltLAmotorNEI[1291:1305,BaltLAmotorNEI$fips =="Los Angeles"]
BaltLAmotorNEI[1291:1305,BaltLAmotorNEI$fips =="Los Angeles"]
BaltLAmotorNEI[1291:1305,BaltLAmotorNEI$fips =="06037"]
BaltLAmotorNEI[BaltLAmotorNEI$fips =="06037",]
BaltLAmotorNEI[BaltLAmotorNEI$fips =="Los Angeles",]
Emitot <- with (NEI,tapply(Emissions,year,sum,na.rm= TRUE))
# converting array to data frame for plotting
yrtotals <- data.frame(Year = names(Emitot), Total.Emission= as.numeric(Emitot),stringsAsFactors = FALSE)
plot(yrtotals$Year,yrtotals$Total.Emission,main = " Trend of Total PM2.5 emissions in United States", xlab="Years",ylab = "PM2.5 Emissions(tons)",pch=19)
dev.copy(png, file = "plot1.png")
dev.off(
)
dev.off()
yrtotals <- with (subset(NEI,fips=="24510"),tapply(Emissions,year,sum,na.rm= TRUE))
# making the plot with the base plotting system to answer the question
# Have total emissions from PM2.5 decreased in the Baltimore City, from 1999 to 2008
plot(names(yrtotals),yrtotals,main = " Trend of Total PM2.5 emissions in Baltimore City", xlab="Years",ylab = "PM2.5 Emissions(tons)",pch=19)
dev.copy(png, file = "plot2.png")
dev.off()
qplot(year,Freq,data=Motordat,facets = .~fips, ylab="Total PM2.5 Emissions(tons)",main = "Total emissions by Motor Sources (Yearwise)")
dev.copy(png, file = "plot6.png")
dev.off()
qplot(year,Freq,data=Motordat,facets = .~fips, ylab="Total PM2.5 Emissions(tons)",main = "Total emissions by Motor Vehicle Sources (Yearwise)")
dev.copy(png, file = "plot6.png")
dev.off()
NEIBalt <- subset(NEI,NEI$fips=="24510")
# Directly plotting all values of Emissions from the Data for Baltimore
qplot(year,Emissions,data=NEIBalt,facets=.~type,ylim = c(0,500)) + geom_smooth(method = "lm")
# Since the above plot doesn't clearly show the trend we will plot total emissions for each type year wise
# Calculating emissions from each type of data source yearwise for Baltimore city
typedat <- as.data.frame(xtabs(Emissions~year+type,data = NEIBalt))
# Plotting using ggplot 2 to answer the question "Of the four types of sources indicated by the type (point, nonpoint, onroad, nonroad) variable, which of these four sources have seen decreases in emissions from 1999–2008 for Baltimore City? Which have seen increases in emissions from 1999–2008?
qplot(year,Freq,data=typedat,facets= .~type,ylab="Total PM2.5 Emissions(tons)",main = "Total emissions by Sources in Baltimore City(Yearwise")
dev.copy(png, file = "plot3.png")
dev.off()
dev.copy(png, file = "plot3.png",height=480, width=480 )
dev.off()
qplot(year,Freq,data=typedat,facets= .~type,ylab="Total PM2.5 Emissions(tons)",main = "Total emissions by Sources in Baltimore City(Yearwise)")
dev.copy(png, file = "plot3.png",height=480, width=480 )
dev.off()
dev.copy(png, file = "plot3.png",height=480, width=580 )
dev.off()
dev.copy(png, file = "plot3.png",height=580, width=680 )
dev.off()
dev.copy(png, file = "plot3.png",height=480, width=580 )
dev.off()
library(ggplot2)
NEI <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
# Subsetting data for Baltimore City
NEIBalt <- subset(NEI,NEI$fips=="24510")
# Subsetting  SCC Codes for emission from motor vehicle sources.
# This can be identified from  Mobile On- Road Vehicles cateogory in EI.Sector Column of SCC.
MotorSCC<- SCC[grepl("On-Road",SCC$EI.Sector),]
# Merging SCC and NEI Data based on the SCC codes for "Mobile on-Road Vehicles"
BaltimotorNEI <- merge(NEIBalt,MotorSCC,by.x="SCC",by.y="SCC")
BaltimotorNEI <- BaltimotorNEI[,c(1:6,8,12)]
# Summing yearly emission values in the two counties
Motordat <- as.data.frame(xtabs(Emissions~year,data = BaltimotorNEI))
# plotting for the Question "How have emissions from motor vehicle sources changed from 1999–2008 in Baltimore City?"
qplot(year,Freq,data=Motordat,ylab="Total PM2.5 Emissions(tons)",main = "Total emissions by Motor Sources in Baltimore City(Yearwise)")
dev.copy(png, file = "plot5.png")
dev.off()
unique(BaltimotorNEI$type)
qplot(year,Freq,data=Motordat,ylab="Total PM2.5 Emissions(tons)",main = "Total emissions by MotorVehicle Sources in Baltimore City(Yearwise)")
dev.copy(png, file = "plot5.png",height=480,width=480)
dev.off()
CoalSCC <- SCC[grepl("Coal",SCC$Short.Name) & grepl("Combustion",SCC$SCC.Level.One),]
# Merging SCC and NEI Data based on the SCC codes for "Coal Combustion
CoalNEI <- merge(NEI,CoalSCC,by.x="SCC",by.y="SCC")
CoalNEI <- CoalNEI[,c(1:6,8,12)]
# Summing Emission values from Cal combustion sources in US yearwise.
Coaldat <- as.data.frame(xtabs(Emissions~year,data = CoalNEI))
# plotting using ggplot2 to anwer the Question" Across the United States, how have emissions from coal combustion-related sources changed from 1999–2008?"
qplot(year,Freq,data=Coaldat,ylab="Total PM2.5 Emissions(tons)",main = "Total emissions by Coal Combustion Sources in United States(Yearwise)")
dev.copy(png, file = "plot4.png",height=480,width=480)
dev.off()
test<- SCC[grepl("vehicle",SCC$Short.Name),]
test<- SCC[grepl("Vehicle",SCC$Short.Name),]
MotorSCC$Short.Name
MotorSCC$Short.Name[1000:1138]
test$Short.Name
MotorSCC$EI.Sector
NEI <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
# Calculating the total emissions in US fromm all sources year wise
Emitot <- with (NEI,tapply(Emissions,year,sum,na.rm= TRUE))
# converting array to data frame
yrtotals <- data.frame(Year = names(Emitot), Total.Emission= as.numeric(Emitot),stringsAsFactors = FALSE)
# Plotting with base plot system to answer "Have total emissions from PM2.5 decreased in the United States from 1999 to 2008?"
plot(yrtotals$Year,yrtotals$Total.Emission,main = " Trend of Total PM2.5 emissions in United States", xlab="Years",ylab = "PM2.5 Emissions(tons)",pch=19)
dev.copy(png, file = "plot1.png")
dev.off()
yrtotals <- with (subset(NEI,fips=="24510"),tapply(Emissions,year,sum,na.rm= TRUE))
# making the plot with the base plotting system to answer the question
# Have total emissions from PM2.5 decreased in the Baltimore City, from 1999 to 2008
plot(names(yrtotals),yrtotals,main = " Trend of Total PM2.5 emissions in Baltimore City", xlab="Years",ylab = "PM2.5 Emissions(tons)",pch=19)
dev.copy(png, file = "plot2.png")
dev.off()
library(ggplot2)
# subsetting data related to Baltimore from the NEI data frame
NEIBalt <- subset(NEI,NEI$fips=="24510")
# Directly plotting all values of Emissions from the Data for Baltimore
qplot(year,Emissions,data=NEIBalt,facets=.~type,ylim = c(0,500)) + geom_smooth(method = "lm")
# Since the above plot doesn't clearly show the trend we will plot total emissions for each type year wise
# Calculating emissions from each type of data source yearwise for Baltimore city
typedat <- as.data.frame(xtabs(Emissions~year+type,data = NEIBalt))
# Plotting using ggplot 2 to answer the question "Of the four types of sources indicated by the type (point, nonpoint, onroad, nonroad) variable, which of these four sources have seen decreases in emissions from 1999-2008 for Baltimore City? Which have seen increases in emissions from 1999-2008?
qplot(year,Freq,data=typedat,facets= .~type,ylab="Total PM2.5 Emissions(tons)",main = "Total emissions by Sources in Baltimore City(Yearwise)")
dev.copy(png, file = "plot3.png",height=480, width=580 )
dev.off()
CoalSCC <- SCC[grepl("Coal",SCC$Short.Name) & grepl("Combustion",SCC$SCC.Level.One),]
# Merging SCC and NEI Data based on the SCC codes for "Coal Combustion
CoalNEI <- merge(NEI,CoalSCC,by.x="SCC",by.y="SCC")
CoalNEI <- CoalNEI[,c(1:6,8,12)]
# Summing Emission values from Cal combustion sources in US yearwise.
Coaldat <- as.data.frame(xtabs(Emissions~year,data = CoalNEI))
# plotting using ggplot2 to anwer the Question" Across the United States, how have emissions from coal combustion-related sources changed from 1999-2008?"
qplot(year,Freq,data=Coaldat,ylab="Total PM2.5 Emissions(tons)",main = "Total emissions by Coal Combustion Sources in United States(Yearwise)")
dev.copy(png, file = "plot4.png",height=480,width=480)
dev.off()
NEIBalt <- subset(NEI,NEI$fips=="24510")
# Subsetting  SCC Codes for emission from motor vehicle sources.
# This can be identified from  Mobile On- Road Vehicles cateogory in EI.Sector Column of SCC.
# The String "On-Road" is enough to identify Mobile - On-Road vehicles
MotorSCC<- SCC[grepl("On-Road",SCC$EI.Sector),]
# Merging SCC and NEI Data based on the SCC codes for "Mobile on-Road Vehicles"
BaltimotorNEI <- merge(NEIBalt,MotorSCC,by.x="SCC",by.y="SCC")
BaltimotorNEI <- BaltimotorNEI[,c(1:6,8,12)]
# Summing yearly emission values in the two counties
Motordat <- as.data.frame(xtabs(Emissions~year,data = BaltimotorNEI))
# plotting for the Question "How have emissions from motor vehicle sources changed from 1999-2008 in Baltimore City?"
qplot(year,Freq,data=Motordat,ylab="Total PM2.5 Emissions(tons)",main = "Total emissions by MotorVehicle Sources in Baltimore City(Yearwise)")
dev.copy(png, file = "plot5.png",height=480,width=480)
dev.off()
NEI <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
# Subsetting Data for only  Baltimore city and Los Angeles
NEIBaltLA <- subset(NEI,NEI$fips=="24510" | NEI$fips=="06037")
# Subsetting  SCC Codes for emission from motor vehicle sources.
# This can be identified from  Mobile On- Road Vehicles cateogory in EI.Sector Column of SCC.
# The String "On-Road" is enough to identify Mobile - On-Road vehicles
MotorSCC<- SCC[grepl("On-Road",SCC$EI.Sector),]
# Merging SCC and NEI Data based on the SCC codes for "Mobile on-Road Vehicles"
BaltLAmotorNEI <- merge(NEIBaltLA,MotorSCC,by.x="SCC",by.y="SCC")
BaltLAmotorNEI <- BaltLAmotorNEI[,c(1:6,8,12)]
# The data frame BaltLAmotorNEI has two emission values of the data source type"POINT and 2095 Obs of type "ON-ROAD"
# The two observations of point type are also retained based on the understand that we are looking at emissions from motor vehicle sources
# converting fips variable of character type to factor.
BaltLAmotorNEI$fips<- as.factor(BaltLAmotorNEI$fips)
# converting levels of fips variable to County names for better labelling of plots.
levels(BaltLAmotorNEI$fips) <- c("Los Angeles","Baltimore City")
# Summing yearly emission values in the two counties
Motordat <- as.data.frame(xtabs(Emissions~year+fips,data = BaltLAmotorNEI))
# plotting the graph with ggplot2 to Compare emissions from motor vehicle sources in Baltimore City & Los Angeles County
qplot(year,Freq,data=Motordat,facets = .~fips, ylab="Total PM2.5 Emissions(tons)",main = "Total emissions by Motor Vehicle Sources (Yearwise)")
dev.copy(png, file = "plot6.png")
dev.off()
NEI <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
# Calculating the total emissions in US from all sources year wise
Emitot <- with (NEI,tapply(Emissions,year,sum,na.rm= TRUE))
# converting array to data frame
yrtotals <- data.frame(Year = names(Emitot), Total.Emission= as.numeric(Emitot),stringsAsFactors = FALSE)
# Plotting with base plot system to answer "Have total emissions from PM2.5 decreased in the United States from 1999 to 2008?"
plot(yrtotals$Year,yrtotals$Total.Emission,main = " Trend of Total PM2.5 emissions in United States", xlab="Years",ylab = "PM2.5 Emissions(tons)",pch=19)
# Calculating total emissions yearwise for Baltimore City
yrtotals <- with (subset(NEI,fips=="24510"),tapply(Emissions,year,sum,na.rm= TRUE))
# making the plot with the base plotting system to answer the question
# Have total emissions from PM2.5 decreased in the Baltimore City, from 1999 to 2008
plot(names(yrtotals),yrtotals,main = " Trend of Total PM2.5 emissions in Baltimore City", xlab="Years",ylab = "PM2.5 Emissions(tons)",pch=19)
library(ggplot2)
# subsetting data related to Baltimore from the NEI data frame
NEIBalt <- subset(NEI,NEI$fips=="24510")
# Directly plotting all values of Emissions from the Data for Baltimore
qplot(year,Emissions,data=NEIBalt,facets=.~type,ylim = c(0,500)) + geom_smooth(method = "lm")
# Since the above plot doesn't clearly show the trend we will plot total emissions for each type year wise
# Calculating emissions from each type of data source yearwise for Baltimore city
typedat <- as.data.frame(xtabs(Emissions~year+type,data = NEIBalt))
# Plotting using ggplot 2 to answer the question "Of the four types of sources indicated by the type (point, nonpoint, onroad, nonroad) variable, which of these four sources have seen decreases in emissions from 1999-2008 for Baltimore City? Which have seen increases in emissions from 1999-2008?
qplot(year,Freq,data=typedat,facets= .~type,ylab="Total PM2.5 Emissions(tons)",main = "Total emissions by Sources in Baltimore City(Yearwise)")
# Subsetting Data for Coal Combustion related sources
# Short.Name values with the string "Coal" identifies the fuel as Coal.
# SCC.Level.One values with the string "Combustion" identifies  emission is due to combustion
CoalSCC <- SCC[grepl("Coal",SCC$Short.Name) & grepl("Combustion",SCC$SCC.Level.One),]
# Merging SCC and NEI Data based on the SCC codes for "Coal Combustion
CoalNEI <- merge(NEI,CoalSCC,by.x="SCC",by.y="SCC")
CoalNEI <- CoalNEI[,c(1:6,8,12)]
# Summing Emission values from Cal combustion sources in US yearwise.
Coaldat <- as.data.frame(xtabs(Emissions~year,data = CoalNEI))
# plotting using ggplot2 to anwer the Question" Across the United States, how have emissions from coal combustion-related sources changed from 1999-2008?"
qplot(year,Freq,data=Coaldat,ylab="Total PM2.5 Emissions(tons)",main = "Total emissions by Coal Combustion Sources in United States(Yearwise)")
# Subsetting data for Baltimore City
NEIBalt <- subset(NEI,NEI$fips=="24510")
# Subsetting  SCC Codes for emission from motor vehicle sources.
# This can be identified from  Mobile On- Road Vehicles cateogory in EI.Sector Column of SCC.
# The String "On-Road" is enough to identify Mobile - On-Road vehicles
MotorSCC<- SCC[grepl("On-Road",SCC$EI.Sector),]
# Merging SCC and NEI Data based on the SCC codes for "Mobile on-Road Vehicles"
BaltimotorNEI <- merge(NEIBalt,MotorSCC,by.x="SCC",by.y="SCC")
BaltimotorNEI <- BaltimotorNEI[,c(1:6,8,12)]
# Summing yearly emission values in the two counties
Motordat <- as.data.frame(xtabs(Emissions~year,data = BaltimotorNEI))
# plotting for the Question "How have emissions from motor vehicle sources changed from 1999-2008 in Baltimore City?"
qplot(year,Freq,data=Motordat,ylab="Total PM2.5 Emissions(tons)",main = "Total emissions by MotorVehicle Sources in Baltimore City(Yearwise)")
# Subsetting Data for only  Baltimore city and Los Angeles
NEIBaltLA <- subset(NEI,NEI$fips=="24510" | NEI$fips=="06037")
# Subsetting  SCC Codes for emission from motor vehicle sources.
# This can be identified from  Mobile On- Road Vehicles cateogory in EI.Sector Column of SCC.
# The String "On-Road" is enough to identify Mobile - On-Road vehicles
MotorSCC<- SCC[grepl("On-Road",SCC$EI.Sector),]
# Merging SCC and NEI Data based on the SCC codes for "Mobile on-Road Vehicles"
BaltLAmotorNEI <- merge(NEIBaltLA,MotorSCC,by.x="SCC",by.y="SCC")
BaltLAmotorNEI <- BaltLAmotorNEI[,c(1:6,8,12)]
# The data frame BaltLAmotorNEI has two emission values of the data source type"POINT and 2095 Obs of type "ON-ROAD"
# The two observations of point type are also retained based on the understand that we are looking at emissions from motor vehicle sources
# converting fips variable of character type to factor.
BaltLAmotorNEI$fips<- as.factor(BaltLAmotorNEI$fips)
# converting levels of fips variable to County names for better labelling of plots.
levels(BaltLAmotorNEI$fips) <- c("Los Angeles","Baltimore City")
# Summing yearly emission values in the two counties
Motordat <- as.data.frame(xtabs(Emissions~year+fips,data = BaltLAmotorNEI))
# plotting the graph with ggplot2 to Compare emissions from motor vehicle sources in Baltimore City & Los Angeles County
qplot(year,Freq,data=Motordat,facets = .~fips, ylab="Total PM2.5 Emissions(tons)",main = "Total emissions by Motor Vehicle Sources (Yearwise)")
unique(SCC$SCC.Level.Four)
unique(SCC$SCC.Level.Two)
barplot(yrtotals$Year,yrtotals$Total.Emission,main = " Trend of Total PM2.5 emissions in United States", xlab="Years",ylab = "PM2.5 Emissions(tons)",pch=19)
barplot(yrtotals$Total.Emission,main = " Trend of Total PM2.5 emissions in United States", xlab="Years",ylab = "PM2.5 Emissions(tons)")
barplot(Emitot,main = " Trend of Total PM2.5 emissions in United States", xlab="Years",ylab = "PM2.5 Emissions(tons)")
dev.copy(png, file = "plot1.png")
dev.off()
totals <- with(NEI, tapply(Emissions, year, sum))
barplot(totals, xlab = "year",
ylab = "PM2.5 Emission",
main = "PM2.5 Emission Totals by Year")
combGeneral <- grepl("comb", SCC$SCC.Level.One, ignore.case=TRUE)
coalGeneral <- grepl("coal", SCC$SCC.Level.Four, ignore.case=TRUE)
coalcomb <- (combGeneral & coalGeneral)
combustionSCC <- SCC[coalcomb,]$SCC
combustionSCC <- SCC[coalcomb =="TRUE",]$SCC
str(combustionSCC)
length(combustionSCC)
combustionSCC
combustionNEI <- NEI[NEI$SCC %in% combustionSCC,]
xtabs(Emissions~year,data = CoalNEI)
xtabs(Emissions~year,data = combustionNEI)
pymnts<- read.csv(".\Reproducible Research\payments.csv")
pymnts<- read.csv("./Reproducible Research/payments.csv",stringsAsFactors = FALSE)
str(payments)
str(pymnts)
library(ggplot2)
g <- ggplot(subset(pymnts,Provider.City=="New York"),aes(Average.Covered.Charges,Average.Total.Payments))
p <- g+geom_point()
print(p)
pymnts[pymnts$Provider.City=="New York"]
pymnts[grepl("York",pymnts$Provider.City)]
pymnts[grepl("YORK",pymnts$Provider.City)]
pymnts[grepl("YORK",pymnts$Provider.City),]
g <- ggplot(subset(pymnts,Provider.State=="NY"),aes(Average.Covered.Charges,Average.Total.Payments))
p <- g+geom_point()
print(p)
g <- ggplot(subset(pymnts,Provider.State=="NY"),aes(Average.Covered.Charges,Average.Total.Payments/1000))
p <- g+geom_point()
print(p)
g <- ggplot(subset(pymnts,Provider.State=="NY"),aes(Average.Covered.Charges/1000,Average.Total.Payments/1000))
p <- g+geom_point()
print(p)
p <- g+geom_point()+geom_smooth(method = "lm")
print(p)
p <- g+geom_point(alpha=1/2)+geom_smooth(method = "lm")
print(p)
p <- g+geom_point(alpha=1/2)+geom_smooth(method = "lm")+labs(title="Medical expenses in New York state",xlab="Mean Covered Charges(000's)",ylab="Mean Total Payments(000's)")
print(p)
p <- g+geom_point(alpha=1/2)+geom_smooth(method = "lm")+labs(title="Medical expenses in New York state",x="Mean Covered Charges(000's)",y="Mean Total Payments(000's)")
print(p)
ggsave("plot1.pdf")
ggplot(mtcars, aes(mpg, wt)) + geom_point()
ggsave("mtcars.pdf")
library(ggplot2)
pymnts<- read.csv("./Reproducible Research/payments.csv",stringsAsFactors = FALSE)
g <- ggplot(subset(pymnts,Provider.State=="NY"),aes(Average.Covered.Charges/1000,Average.Total.Payments/1000))
p <- g+geom_point(alpha=1/2)+geom_smooth(method = "lm")+labs(title="Medical expenses in New York state",x="Mean Covered Charges(000's)",y="Mean Total Payments(000's)")
ggsave("plot1.pdf")
library(ggplot2)
pymnts<- read.csv("./Reproducible Research/optional project/payments.csv",stringsAsFactors = FALSE)
g <- ggplot(subset(pymnts,Provider.State=="NY"),aes(Average.Covered.Charges/1000,Average.Total.Payments/1000))
p <- g+geom_point(alpha=1/2)+geom_smooth(method = "lm")+labs(title="Medical expenses in New York state",x="Mean Covered Charges(000's)",y="Mean Total Payments(000's)")
ggsave("plot1.pdf")
g <- ggplot(pymnts,aes(Average.Covered.Charges/1000,Average.Total.Payments/1000,color=DRG.Definition)
)
p <- g+geom_point(alpha=1/2)+geom_smooth(method = "lm")
print(p)
p <- g+geom_boxplot()
print(p)
g <- ggplot(pymnts,aes(Average.Covered.Charges/1000,Average.Total.Payments/1000)
)
p <- g+geom_point(alpha=1/2)+geom_smooth(method = "lm")+facet_wrap(Provider.State~DRG.Definition)
print(p)
unique((pymnts$DRG.Definition))
unique((pymnts$Provider.State))
g <- ggplot(pymnts,aes(Average.Covered.Charges/1000,Average.Total.Payments/1000,color=DRG.Definition)
)
g <- ggplot(pymnts,aes(Average.Covered.Charges/1000,Average.Total.Payments/1000)
)
p <- g+geom_point(aes(color=type), alpha=1/2)+geom_smooth(method = "lm")+facet_grid(.~Provider.State~DRG.Definition)
print(p)
p <- g+geom_point(aes(color=DRG.Definition), alpha=1/2)+geom_smooth(method = "lm")+facet_grid(.~Provider.State)
print(p)
g <- ggplot(pymnts,aes(Average.Covered.Charges/1000,Average.Total.Payments/1000,color=DRG.Definition)
)
p <- g+geom_point(alpha=1/2)+geom_smooth(method = "lm")+facet_grid(.~Provider.State)
print(p)
p <- g+geom_point(alpha=1/2)+geom_smooth(method = "lm")+facet_grid(.~Provider.State)+legend(x="bottom")
p <- g+geom_point(alpha=1/2)+geom_smooth(method = "lm")+facet_grid(.~Provider.State)+legend("bottom")
p <- g+geom_point(alpha=1/2)+geom_smooth(method = "lm")+facet_grid(.~Provider.State)+theme(legend.position = "bottom")
print(p)
p <- g+geom_point(alpha=1/2)+geom_smooth(method = "lm",se=FALSE)+facet_grid(.~Provider.State)+theme(legend.position = "bottom")
print(p)
p <- g+geom_point(alpha=1/3)+geom_smooth(method = "lm",se=FALSE)+facet_grid(.~Provider.State)+theme(legend.position = "bottom")
print(p)
p <- g+geom_point(alpha=1/3)+geom_smooth(method = "lm",se=FALSE)+facet_grid(Provider.State~.)+theme(legend.position = "bottom")
print(p)
g <- ggplot(pymnts,aes(Average.Covered.Charges/1000,Average.Total.Payments/1000,color=Provider.State))
p <- g+geom_point(alpha=1/3)+geom_smooth(method = "lm",se=FALSE)+facet_grid(DRG.Definition~.)+theme(legend.position = "bottom")
print(p)
p <- g+geom_point(alpha=1/3)+geom_smooth(method = "lm",se=FALSE)+facet_grid(DRG.Definition~.,scales= "free")+theme(legend.position = "bottom")
print(p)
p <- g+geom_point(alpha=1/3)+geom_smooth(method = "lm",se=FALSE)+facet_grid(DRG.Definition~.,scales= "free",space = "free")+theme(legend.position = "bottom")
print(p)
p <- g+geom_point(alpha=1/3)+geom_smooth(method = "lm",se=FALSE)+facet_grid(.~DRG.Definition,scales= "free",space = "free")+theme(legend.position = "bottom")
print(p)
p <- g+geom_point(alpha=1/3)+geom_smooth(method = "lm",se=FALSE)+facet_wrap(.~DRG.Definition,scales= "free",space = "free")+theme(legend.position = "bottom")
p <- g+geom_point(alpha=1/3)+geom_smooth(method = "lm",se=FALSE)+facet_wrap(.~DRG.Definition,scales= "free")+theme(legend.position = "bottom")
print(p)
p <- g+geom_point(alpha=1/3)+geom_smooth(method = "lm",se=FALSE)+facet_wrap(~DRG.Definition,scales= "free")+theme(legend.position = "bottom")
print(p)
g <- ggplot(pymnts,aes(Average.Covered.Charges/1000,Average.Total.Payments/1000,color=DRG.definition))
p <- g+geom_point(alpha=1/3)+geom_smooth(method = "lm",se=FALSE)+facet_wrap(~Provider.State,scales= "free")+theme(legend.position = "bottom")
print(p)
g <- ggplot(pymnts,aes(Average.Covered.Charges/1000,Average.Total.Payments/1000,color=DRG.Definition))
p <- g+geom_point(alpha=1/3)+geom_smooth(method = "lm",se=FALSE)+facet_wrap(~Provider.State,scales= "free")+theme(legend.position = "bottom")
print(p)
p <- g+geom_point(alpha=1/3)+geom_smooth(method = "lm",se=FALSE)+scale_color_brewer="BrBG"  facet_wrap(~Provider.State,scales= "free")+theme(legend.position = "bottom")
p <- g+geom_point(alpha=1/3)+geom_smooth(method = "lm",se=FALSE)+scale_color_brewer(palette =  ="BrBG")+facet_wrap(~Provider.State,scales= "free")+theme(legend.position = "bottom")
p <- g+geom_point(alpha=1/3)+geom_smooth(method = "lm",se=FALSE)+scale_color_brewer(palette =  "BrBG")+facet_wrap(~Provider.State,scales= "free")+theme(legend.position = "bottom")
print(p)
p <- g+geom_point(alpha=1/3)+geom_smooth(method = "lm",se=FALSE)+scale_color_brewer(palette =  "RdYIGn")+facet_wrap(~Provider.State,scales= "free")+theme(legend.position = "bottom")
p <- g+geom_point(alpha=1/3)+geom_smooth(method = "lm",se=FALSE)+scale_color_brewer(palette =  "RdYlGn")+facet_wrap(~Provider.State,scales= "free")+theme(legend.position = "bottom")
print(p)
p <- g+geom_point(alpha=1/3)+geom_smooth(method = "lm",se=FALSE)+scale_color_brewer(palette =  "Set1")+facet_wrap(~Provider.State,scales= "free")+theme(legend.position = "bottom")
print(p)
p <- g+geom_point(alpha=1/3)+geom_smooth(method = "lm",se=FALSE)+scale_color_brewer(palette =  "Set2")+facet_wrap(~Provider.State,scales= "free")+theme(legend.position = "bottom")
print(p)
p <- g+geom_point(alpha=1/3)+geom_smooth(method = "lm",se=FALSE)+scale_color_brewer(palette =  "Set3")+facet_wrap(~Provider.State,scales= "free")+theme(legend.position = "bottom")
print(p)
p <- g+geom_point(alpha=1/3)+geom_smooth(method = "lm",se=FALSE)+scale_color_brewer(palette =  "Set3")+facet_wrap(~Provider.State,scales= "free")+theme(legend.position = "bottom")+theme_bw(base_family = "Avenir", base_size = 10)
print(p)
p <- g+geom_point(alpha=1/3)+geom_smooth(method = "lm",se=FALSE)+scale_color_brewer(palette =  "Set3")+facet_wrap(~Provider.State,scales= "free")+theme(legend.position = "bottom")
print(p)
p <- g+geom_point(alpha=1/3)+geom_smooth(method = "lm",se=FALSE)+scale_color_brewer(palette =  "Set3")+facet_wrap(~Provider.State,scales= "free")+theme(legend.position = "bottom",panel.background = element_rect(fill = "white", colour = "grey50"))
print(p)
p <- g+geom_point(alpha=1/3)+geom_smooth(method = "lm",se=FALSE)+scale_color_brewer(palette =  "Set3")+facet_wrap(~Provider.State,scales= "free")+theme(legend.position = "bottom",panel.background = element_rect(fill = "white", colour = "grey50"))
library(ggplot2)
p <- g+geom_point(alpha=1/3)+geom_smooth(method = "lm",se=FALSE)+scale_color_brewer(palette =  "Set3")+facet_wrap(~Provider.State,scales= "free")+theme(legend.position = "bottom",panel.background = element_rect(fill = "white", colour = "grey50"))
p <- g+geom_point(alpha=1/3)+geom_smooth(method = "lm",se=FALSE)+scale_color_brewer(palette =  "Set3")+facet_wrap(~Provider.State,scales= "free")+theme(legend.position = "bottom",panel.background = element_rect(fill = "white", colour = "grey50"))
print(p)
p <- g+geom_point(alpha=1/3)+geom_smooth(method = "lm",se=FALSE)+colorRampPalette(c("red","blue","yellow","black","orange","green")) +facet_wrap(~Provider.State,scales= "free")+theme(legend.position = "bottom",panel.background = element_rect(fill = "white", colour = "grey50"))
p <- g+geom_point(alpha=1/3)+geom_smooth(method = "lm",se=FALSE)+scale_color_brewer(colorRampPalette(c("red","blue","yellow","black","orange","green"))) +facet_wrap(~Provider.State,scales= "free")+theme(legend.position = "bottom",panel.background = element_rect(fill = "white", colour = "grey50"))
print(p)
p <- g+geom_point(alpha=1/3)+geom_smooth(method = "lm",se=FALSE)+scale_color_brewer(palette="YlOrRd") +facet_wrap(~Provider.State,scales= "free")+theme(legend.position = "bottom",panel.background = element_rect(fill = "white", colour = "grey50"))
print(p)
p <- g+geom_point(alpha=1/3)+geom_smooth(method = "lm",se=FALSE)+scale_color_manual(values = =c("red","black","yellow","blue","pink","green")) +facet_wrap(~Provider.State,scales= "free")+theme(legend.position = "bottom",panel.background = element_rect(fill = "white", colour = "grey50"))
p <- g+geom_point(alpha=1/3)+geom_smooth(method = "lm",se=FALSE)+scale_color_manual(values =c("red","black","yellow","blue","pink","green")) +facet_wrap(~Provider.State,scales= "free")+theme(legend.position = "bottom",panel.background = element_rect(fill = "white", colour = "grey50"))
print(p)
p <- g+geom_point(alpha=1/3)+geom_smooth(method = "lm",se=FALSE)+scale_color_manual(values =c("red","black","yellow","blue","green","pink")) +facet_wrap(~Provider.State,scales= "free")+theme(legend.position = "bottom",panel.background = element_rect(fill = "white", colour = "grey50"))
print(p)
p <- g+geom_point(alpha=1/3)+geom_smooth(method = "lm",se=FALSE)+scale_color_manual(values =c("yellow","black","red","blue","green","pink")) +facet_wrap(~Provider.State,scales= "free")+theme(legend.position = "bottom",panel.background = element_rect(fill = "white", colour = "grey50"))
print(p)
g <- ggplot(pymnts,aes(Average.Covered.Charges/1000,Average.Total.Payments/1000)
)
p <- g+geom_point(alpha=1/3)+geom_smooth(method = "lm",se=FALSE)+scale_color_manual(values =c("yellow","black","red","blue","green","pink")) +facet_grid(DRg.Definition~Provider.State,scales= "free",space="free")+theme(legend.position = "bottom",panel.background = element_rect(fill = "white", colour = "grey50"))
print(p)
p <- g+geom_point(alpha=1/3)+geom_smooth(method = "lm",se=FALSE)+scale_color_manual(values =c("yellow","black","red","blue","green","pink")) +facet_grid(DRG.Definition~Provider.State,scales= "free",space="free")+theme(legend.position = "bottom",panel.background = element_rect(fill = "white", colour = "grey50"))
print(p)
p <- g+geom_point(alpha=1/3)+geom_smooth(method = "lm",se=FALSE)+facet_grid(DRG.Definition~Provider.State,scales= "free",space="free")+theme_bw()
print(p)
p <- g+geom_point(alpha=1/3)+geom_smooth(method = "lm",se=FALSE)+facet_grid(DRG.Definition~Provider.State,space="free")+theme_bw()
print(p)
p <- g+geom_point(alpha=1/3)+geom_smooth(method = "lm",se=FALSE)+facet_grid(Provider.State~DRG.Definition,space="free")+theme_bw()
print(p)
p <- g+geom_point(alpha=1/3)+geom_smooth(method = "lm",se=FALSE)+facet_grid(Provider.State~DRG.Definition,space="free")+theme_bw(base_size = 8)
print(p)
p <- g+geom_point(alpha=1/3)+geom_smooth(method = "lm",se=FALSE)+facet_grid(Provider.State~DRG.Definition,space="free")+theme_bw(base_size = 8)+labs(title="Medical Expenses Coverage",x="Mean Covered Charges(000's)",y="Mean Total Payments(000's)")+label_wrap_gen(width = 25, multi_line = TRUE)
p <- g+geom_point(alpha=1/3)+geom_smooth(method = "lm",se=FALSE)+facet_grid(Provider.State~DRG.Definition,labeller = label_wrap_gen(width = 25, multi_line = TRUE))+theme_bw(base_size = 8)+labs(title="Medical Expenses Coverage",x="Mean Covered Charges(000's)",y="Mean Total Payments(000's)")
print(p)
g <- ggplot(subset(pymnts,Provider.State=="NY"),aes(Average.Covered.Charges/1000,Average.Total.Payments/1000))
p <- g+geom_point(alpha=1/2)+geom_smooth(method = "lm")+labs(title="Medical Expenses Coverage in New York state",x="Mean Covered Charges(000's)",y="Mean Total Payments(000's)")
ggsave("plot1.pdf")
p <- g+geom_point(alpha=1/3)+geom_smooth(method = "lm",se=FALSE)+facet_grid(Provider.State~DRG.Definition,labeller = label_wrap_gen(width = 25, multi_line = TRUE))+theme_bw(base_size = 8)+labs(title="Medical Expenses Coverage",x="Mean Covered Charges(000's)",y="Mean Total Payments(000's)")
ggsave("plot2.pdf")
g <- ggplot(pymnts,aes(Average.Covered.Charges/1000,Average.Total.Payments/1000))
# p <- g+geom_point(alpha=1/3)+geom_smooth(method = "lm",se=FALSE)+scale_color_brewer(palette =  "Set3")+facet_wrap(~Provider.State,scales= "free")+theme(legend.position = "bottom",panel.background = element_rect(fill = "white", colour = "grey50"))
# p <- g+geom_point(alpha=1/3)+geom_smooth(method = "lm",se=FALSE)+scale_color_manual(values =c("yellow","black","red","blue","green","pink")) +facet_wrap(~Provider.State,scales= "free")+theme(legend.position = "bottom",panel.background = element_rect(fill = "white", colour = "grey50"))
p <- g+geom_point(alpha=1/3)+geom_smooth(method = "lm",se=FALSE)+facet_grid(Provider.State~DRG.Definition,labeller = label_wrap_gen(width = 25, multi_line = TRUE))+theme_bw(base_size = 8)+labs(title="Medical Expenses Coverage",x="Mean Covered Charges(000's)",y="Mean Total Payments(000's)")
ggsave("plot2.pdf")
ggsave("plot2.pdf",width = 6.3,units="in")
ggsave("plot2.pdf",width = 6.3,units="in")
p <- g+geom_point(alpha=1/3)+geom_smooth(method = "lm",se=FALSE)+facet_grid(Provider.State~DRG.Definition,labeller = label_wrap_gen(width = 30, multi_line = TRUE))+theme_bw(base_size = 8)+labs(title="Medical Expenses Coverage",x="Mean Covered Charges(000's)",y="Mean Total Payments(000's)")
ggsave("plot2.pdf",width = 6.3,units="in")
p <- g+geom_point(alpha=1/3)+geom_smooth(method = "lm",se=FALSE)+facet_grid(Provider.State~DRG.Definition,labeller = label_wrap_gen(width = 30, multi_line = TRUE))+theme_bw(base_size = 8)+labs(title="Medical Expenses Coverage",x="Mean Covered Charges(000's)",y="Mean Total Payments(000's)")
ggsave("plot2.pdf",width = 6.3,units="in")
p <- g+geom_point(alpha=1/3)+geom_smooth(method = "lm",se=FALSE)+facet_grid(Provider.State~DRG.Definition,labeller = label_wrap_gen(width = 15, multi_line = TRUE))+theme_bw(base_size = 8)+labs(title="Medical Expenses Coverage",x="Mean Covered Charges(000's)",y="Mean Total Payments(000's)")
ggsave("plot2.pdf",width = 6.3,units="in")
ggsave("plot2.pdf",width = 6.3,height =4.3, units="in")
p <- g+geom_point(alpha=1/3)+geom_smooth(method = "lm",se=FALSE)+facet_grid(Provider.State~DRG.Definition,labeller = label_wrap_gen(width = 25, multi_line = TRUE))+theme_bw(base_size = 8)+labs(title="Medical Expenses Coverage",x="Mean Covered Charges(000's)",y="Mean Total Payments(000's)")
ggsave("plot2.pdf",width = 6.3,height =4.3, units="in")
p <- g+geom_point(alpha=1/3)+geom_smooth(method = "lm",se=FALSE)+facet_grid(Provider.State~DRG.Definition,labeller = label_wrap_gen(width = 25, multi_line = TRUE))+theme_bw(base_size = 8)+labs(title="Medical Expenses Coverage",x="Mean Covered Charges(000's)",y="Mean Total Payments(000's)")
ggsave("plot2.pdf",width = 6.3,height =4.3, units="in")
ggsave("plot2.pdf",width = 7.3,height =4.3, units="in")
p <- g+geom_point(alpha=1/3)+geom_smooth(method = "lm",se=FALSE)+facet_grid(Provider.State~DRG.Definition,labeller = label_parsed()+theme_bw(base_size = 8)+labs(title="Medical Expenses Coverage",x="Mean Covered Charges(000's)",y="Mean Total Payments(000's)")
)
p <- g+geom_point(alpha=1/3)+geom_smooth(method = "lm",se=FALSE)+facet_grid(Provider.State~DRG.Definition,labeller = label_parsed())+theme_bw(base_size = 8)+labs(title="Medical Expenses Coverage",x="Mean Covered Charges(000's)",y="Mean Total Payments(000's)")
p <- g+geom_point(alpha=1/3)+geom_smooth(method = "lm",se=FALSE)+facet_grid(Provider.State~DRG.Definition,labeller = label_parsed(multi_line = TRUE))+theme_bw(base_size = 8)+labs(title="Medical Expenses Coverage",x="Mean Covered Charges(000's)",y="Mean Total Payments(000's)")
p <- g+geom_point(alpha=1/3)+geom_smooth(method = "lm",se=FALSE)+facet_grid(Provider.State~DRG.Definition,labeller = label_parsed(labels,multi_line = TRUE))+theme_bw(base_size = 8)+labs(title="Medical Expenses Coverage",x="Mean Covered Charges(000's)",y="Mean Total Payments(000's)")
ggsave("plot2.pdf",width = 7.3,height =4.3, units="in")
p <- g+geom_point(alpha=1/3)+geom_smooth(method = "lm",se=FALSE)+facet_grid(Provider.State~DRG.Definition,labeller = label_wrap_gen(width = 25, multi_line = TRUE))+theme_bw(base_size = 8)+labs(title="Medical Expenses Coverage",x="Mean Covered Charges(000's)",y="Mean Total Payments(000's)")
ggsave("plot2.pdf")
p <- g+geom_point(alpha=1/3)+geom_smooth(method = "lm",se=FALSE)+facet_grid(Provider.State~DRG.Definition,space = "free",labeller = label_wrap_gen(width = 25, multi_line = TRUE))+theme_bw(base_size = 8)+labs(title="Medical Expenses Coverage",x="Mean Covered Charges(000's)",y="Mean Total Payments(000's)")
ggsave("plot2.pdf")
p <- g+geom_point(alpha=1/3)+geom_smooth(method = "lm",se=FALSE)+facet_grid(Provider.State~DRG.Definition,space = "free")+theme(strip.text.x = element_text(size = 6))+theme_bw(base_size = 8)+labs(title="Medical Expenses Coverage",x="Mean Covered Charges(000's)",y="Mean Total Payments(000's)")
print(p)
p <- g+geom_point(alpha=1/3)+geom_smooth(method = "lm",se=FALSE)+facet_grid(Provider.State~DRG.Definition,space = "free",labeller = label_wrap_gen(width=25,multi_line = TRUE))+theme(strip.text.x = element_text(size = 6),strip.text.y = element_text(face="bold",size=10))+theme_bw(base_size = 8)+labs(title="Medical Expenses Coverage",x="Mean Covered Charges(000's)",y="Mean Total Payments(000's)")
print(p)
ggsave("plot2.pdf")
ggsave("plot2.pdf", width = 6.3, height = 4.3)
p <- g+geom_point(alpha=1/3)+geom_smooth(method = "lm",se=FALSE)+facet_grid(Provider.State~DRG.Definition,space = "free",labeller = label_wrap_gen(width = 20, multi_line = TRUE))+theme_bw(base_size = 8)+labs(title="Medical Expenses Coverage",x="Mean Covered Charges(000's)",y="Mean Total Payments(000's)")
ggsave("plot2.pdf", width = 6.3, height = 4.3)
p <- g+geom_point(aes(colour=factor(Provider.State)) alpha=1/3)+geom_smooth(method = "lm",se=FALSE)+facet_grid(Provider.State~DRG.Definition,space = "free",labeller = label_wrap_gen(width = 20, multi_line = TRUE))+theme_bw(base_size = 8)+labs(title="Medical Expenses Coverage",x="Mean Covered Charges(000's)",y="Mean Total Payments(000's)")
p <- g+geom_point(aes(colour=factor(Provider.State)), alpha=1/3)+geom_smooth(method = "lm",se=FALSE)+facet_grid(Provider.State~DRG.Definition,space = "free",labeller = label_wrap_gen(width = 20, multi_line = TRUE))+theme_bw(base_size = 8)+labs(title="Medical Expenses Coverage",x="Mean Covered Charges(000's)",y="Mean Total Payments(000's)")
print(p)
p <- g+geom_point(aes(colour=factor(Provider.State)), alpha=1/3,show.legend = FALSE)+geom_smooth(method = "lm",se=FALSE)+facet_grid(Provider.State~DRG.Definition,space = "free",labeller = label_wrap_gen(width = 20, multi_line = TRUE))+theme_bw(base_size = 8)+labs(title="Medical Expenses Coverage",x="Mean Covered Charges(000's)",y="Mean Total Payments(000's)")
print(p)
ggsave("plot2.pdf", width = 6.3, height = 4.3)
rm (list=ls())
activity <- read.csv("./activity/activity.csv",stringsAsFactors = FALSE)
activity$date <- as.Date(activity$date,format = "%Y-%m-%d")
getwd()
setwd("C:/Users/Rajesh/Documents/Reproducible Reserach/project 1/RepData_PeerAssessment1")
setwd("C:/Users/Rajesh/Documents/Reproducible Research/project 1/RepData_PeerAssessment1")
activity <- read.csv("./activity/activity.csv",stringsAsFactors = FALSE)
activity$date <- as.Date(activity$date,format = "%Y-%m-%d")
meanstepinterval <- tapply(activity$steps,activity$interval,mean,na.rm=true)
meanstepinterval <- tapply(activity$steps,activity$interval,mean,na.rm=TRUE)
meanstepinterval
intsteps <- tapply(activity$steps,as.factor(activity$interval),sum,na.rm=TRUE)
intsteps
length(unique(activity$date))
10967/61
meanintsteps <- tapply(activity$steps,activity$interval,mean,na.rm=TRUE)
rm(meanstepinterval)
install.packages("mice")
library(mice)
nactivity <- activity
library(plyr)
impute <- function(x, fun) {
missing <- is.na(x)
replace(x, missing, fun(x[!missing]))
}
ddply(nactivity,~interval,transform, steps= impute(steps,mean))
head(nactivity)
ddply(nactivity,.(interval),transform, steps= impute(steps,mean))
activity[activity$date=="2012-10-04",]
nactivity <- ddply(nactivity,.(interval),transform, steps= impute(steps,mean))
head(nactivity)
nactivity<- order()
nactivity <- ddply(nactivity,.(interval),transform, steps= impute(steps,mean))
nactivity<- nactivity[order(date,steps),]
nactivity<- nactivity[order(date,interval),]
nactivity<- nactivity[order(nactivity$date,nactivity$interval),]
nactivity<-arrange(nactivity,date,interval)
class(nactivity)
nactivity <- ddply(nactivity,.(interval),transform, steps= impute(steps,mean))
nactivity<- activity
nactivity <- ddply(nactivity,.(interval),transform, steps= impute(steps,mean))
nactivity<-arrange(nactivity,date,interval)
head(nactivity)
nsteps <- tapply(nactivity$steps,as.factor(nactivity$date),sum,na.rm=TRUE)
hist(nsteps,main = "Histogram of Steps taken per day",xlab= "Number of Steps")
par(mfrow=c(2,1))
nsteps <- tapply(nactivity$steps,as.factor(nactivity$date),sum,na.rm=TRUE)
hist(nsteps,main = "Histogram of Steps taken per day",xlab= "Number of Steps")
steps <- tapply(activity$steps,as.factor(activity$date),sum,na.rm=TRUE)
hist(steps,main = "Histogram of Steps taken per day",xlab= "Number of Steps")
